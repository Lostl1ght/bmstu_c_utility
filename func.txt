long num_sum(long num)
{
    long sum = 0;
    num = labs(num);
    while (num > 0)
    {
        sum += num % 10;
        num /= 10;
    }

    return sum;
}

long is_prime(long num)
{
    if (num <= 1)
        return 0;

    long flag = 1;
    for (long i = 2; i <= num / 2; i++)
        if (num % i == 0)
        {
            flag = 0;
            break;
        }

    return flag;
}

long is_sqrt(long a)
{
    long i = 1;
    while (a > 0)
    {
        a -= i;
        i += 2;
    }

    return a == 0;
}

long insertion_sort(long a[NMAX], size_t n)
{
    if (n == 0)
        return EXIT_FAILURE;
    
    for (size_t i = 1; i < n; i++)
    {
        size_t cur = i;
        while (cur > 0 && a[cur] < a[cur - 1])
        {
            swap(a + cur, a + (cur - 1));
            cur--;
        }
        
    }
    
    return EXIT_SUCCESS;
}

void swap(long *a, long *b)
{
    long t = *a;
    *a = *b;
    *b = t;

    return;
}

void delete_by_i(long a[NMAX], size_t *n, size_t *i)
{
    for (size_t l = *i; l < *n - 1; l++)
        a[l] = a[l + 1];

    *n -= 1;
    *i -= 1;

    return;
}